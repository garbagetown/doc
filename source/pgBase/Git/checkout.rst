:orphan:

=======================
開発を始めるときにやること（checkout）
=======================

.. contents::
    :depth: 3

作業概要
====

| 自分の開発PCのソースコードを最新化し、ブランチを作ります。
|
| **ブランチ名は機能をあらわす名称やチケット番号など、作成内容がわかるようにしてください。**
| ブランチ名：feature/[タスク内容がわかる名前]
|

.. note::

    - ユーザ作成機能のブランチの場合： feature/createUser
    - Redmineのチケット番号#123の対応をする場合： feature/#123

| 新しく作成したブランチに対して、ソースコードの変更を登録していきます。ブランチ間でのソースコードの差分はgitBucket上で簡単に確認することが出来ます。
| チームにて作成しているソースコードはdevelopブランチに格納され、自分のソースコードはfeatureブランチに格納されていくため、2つのブランチの差分をみれば、自分が修正した内容が明確になります。そのため、レビューのときにレビュー対象の範囲が明確になります。なお、ブランチのライフサイクルは2、3日を目安としましょう。
|

.. warning::

    ブランチの作成からレビュー完了、マージまで開発単位が長期間になると、ソースコードの競合などが発生しやすくなります。
    Gitのマージ機能は強力ですが、なるべく競合を発生させないように運用しましょう。
    ※競合が発生した場合の解決方法については本ドキュメントには記載しません。

.. image:: ./img/branch.png

事前準備
====

- ローカルにリポジトリがcloneされていること

作業内容
====

ローカルに新しくリポジトリをcloseしてきたばかりの人は手順1α⇒手順2を実施してください。  
ローカルリポジトリに既にdevelopブランチがある人は都度都度、作業1β⇒作業2を実施してください。  

- 手順1α・β：developブランチへの切り替え
- 手順2：featureブランチの作成

★手順1α（cloneしてきたばかりの人用）
----------------------

1. SourceTreeを起動してください。
2. チェックアウトボタンを押す。
3. 新規ブランチをチェックアウトを選択し、プルダウンリストからdevelopブランチを選択してください。
4. 新ブランチ名は自動で入ります。問題なければそのまま。

.. image:: ./img/sourcetree_branch1.png

5. OKを押してください。これが、イメージ図のひとつめの"**checkout**"の作業です。

事後確認
----

リモートリポジトリのdevelopブランチと同じ状態のブランチをローカルリポジトリに作成できました。  

★手順1β（すでにdevelopブランチを作っている人用）
-----------------------------

1. SourceTreeを起動してください。
2. 赤枠のdevelopをダブルクリックしてください。
3. developブランチに切り替わります。

.. image:: ./img/sourcetree_branch2.png

事後確認
----

リモートリポジトリのdevelopブランチとローカルリポジトリのdevelopブランチの状態が同じになりました。  

★手順2
----

1. SourceTreeを起動してください。
2. developブランチを **最新化** してください。(以下作業にてリモートリポジトリの変更をローカルに適用させることが出来ます。)

.. image:: ./img/sourcetree_pull.png

3. ブランチボタンを押す。
4. 現在のブランチが **develop** になっていることを確認してください。
5. 新規ブランチにfeatureブランチの名前を入力してください。

.. image:: ./img/sourcetree_featureBranch.png

6. OKを押してください。これがイメージ図のふたつめの"**checkout**"です。

事後確認
----

開発PCにfeatureブランチを新規作成出来ました。
